# Generated by Django 5.2.4 on 2025-07-31 10:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Auctions',
            fields=[
                ('auction_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('auction_name', models.CharField(max_length=1000)),
                ('item_image', models.CharField(blank=True, default=None, max_length=10000, null=True)),
                ('item_category', models.JSONField(blank=True, default=list)),
                ('item_name', models.CharField(default='No Name', max_length=1000)),
                ('item_description', models.CharField(default='None', max_length=10000)),
                ('starting_bid', models.FloatField()),
                ('listing_creation_time', models.DateTimeField(auto_now_add=True)),
                ('current_bid', models.FloatField()),
                ('status', models.CharField(default='Sale', max_length=4)),
                ('current_bid_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='winning_bids', to=settings.AUTH_USER_MODEL)),
                ('listed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listed_items', to=settings.AUTH_USER_MODEL)),
                ('sold_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchased_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='watchlist',
            field=models.ManyToManyField(blank=True, related_name='watchlist_users', to='auctions.auctions'),
        ),
        migrations.CreateModel(
            name='Bids',
            fields=[
                ('bid_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('bid_amount', models.FloatField()),
                ('bid_time', models.DateTimeField(auto_now_add=True)),
                ('auction_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auction_bids', to='auctions.auctions')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('commment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('comment_content', models.CharField(max_length=10000)),
                ('auction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auction_comments', to='auctions.auctions')),
                ('comment_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
